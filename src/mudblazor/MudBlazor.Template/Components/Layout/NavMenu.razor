@*#if (IndividualLocalAuth)
@implements IDisposable
@inject NavigationManager NavigationManager
##endif*@

<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
@*#if (UseServer || UseWebAssembly)
    <MudNavLink Href="counter" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Add">Counter</MudNavLink>
##endif*@
    <MudNavLink Href="weather" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">Weather</MudNavLink>
@*#if (IndividualLocalAuth)
	<MudNavLink Href="auth" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">Auth Required</MudNavLink>

	<AuthorizeView>
		<Authorized>
			<MudNavLink Href="Account/Manage" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">@context.User.Identity?.Name</MudNavLink>
			 <form action="Account/Logout" method="post">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                <button class="mud-nav-link" type="submit">
                    <MudIcon Icon="@Icons.Material.Filled.Logout" Title="Add" />
                    <div class="mud-nav-link-text">Logout</div>
                </button>
            </form>
		</Authorized>
		<NotAuthorized>
			<MudNavLink Href="Account/Register" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">Register</MudNavLink>
			<MudNavLink Href="Account/Login" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">Login</MudNavLink>
		</NotAuthorized>
	</AuthorizeView>
##endif*@

</MudNavMenu>

@*#if (IndividualLocalAuth)
@code {
    private string? currentUrl;
   
       protected override void OnInitialized()
       {
           currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
           NavigationManager.LocationChanged += OnLocationChanged;
       }
   
       private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
       {
           currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
           StateHasChanged();
       }
   
       public void Dispose()
       {
           NavigationManager.LocationChanged -= OnLocationChanged;
       }
}
##endif*@